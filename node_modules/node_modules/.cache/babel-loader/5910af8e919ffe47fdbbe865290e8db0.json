{"ast":null,"code":"import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import axios from\"../../utils/axios\";const initialState={order:null,addOrder:{loading:false,error:false,success:false,message:null}};export const addOrder=createAsyncThunk(\"order/addOrder\",async(values,_ref)=>{let{rejectWithValue}=_ref;try{const{data}=await axios.post(\"/orders/add\",values);return data;}catch(err){return rejectWithValue(err.response.data);}});const orderSlice=createSlice({name:\"order\",initialState,reducers:{clearAddOrder:state=>{state.addOrder.loading=false;state.addOrder.error=false;state.addOrder.success=false;state.addOrder.message=null;}},extraReducers:builder=>{builder.addCase(addOrder.pending,state=>{state.addOrder.loading=true;state.addOrder.error=false;state.addOrder.success=false;state.addOrder.message=null;});builder.addCase(addOrder.fulfilled,(state,action)=>{state.addOrder.loading=false;state.addOrder.error=false;state.addOrder.success=true;state.addOrder.message=action.payload.message;});builder.addCase(addOrder.rejected,(state,action)=>{state.addOrder.loading=false;state.addOrder.error=true;state.addOrder.success=false;state.addOrder.message=action.payload.message;});}});export const{clearAddOrder}=orderSlice.actions;export default orderSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","order","addOrder","loading","error","success","message","values","_ref","rejectWithValue","data","post","err","response","orderSlice","name","reducers","clearAddOrder","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/home/devuser/SACHIN/client/src/redux/slices/orderSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../utils/axios\";\n\nconst initialState = {\n  order: null,\n  addOrder: {\n    loading: false,\n    error: false,\n    success: false,\n    message: null,\n  },\n};\n\nexport const addOrder = createAsyncThunk(\n  \"order/addOrder\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/orders/add\", values);\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nconst orderSlice = createSlice({\n  name: \"order\",\n  initialState,\n  reducers: {\n    clearAddOrder: (state) => {\n      state.addOrder.loading = false;\n      state.addOrder.error = false;\n      state.addOrder.success = false;\n      state.addOrder.message = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(addOrder.pending, (state) => {\n      state.addOrder.loading = true;\n      state.addOrder.error = false;\n      state.addOrder.success = false;\n      state.addOrder.message = null;\n    });\n    builder.addCase(addOrder.fulfilled, (state, action) => {\n      state.addOrder.loading = false;\n      state.addOrder.error = false;\n      state.addOrder.success = true;\n      state.addOrder.message = action.payload.message;\n    });\n    builder.addCase(addOrder.rejected, (state, action) => {\n      state.addOrder.loading = false;\n      state.addOrder.error = true;\n      state.addOrder.success = false;\n      state.addOrder.message = action.payload.message;\n    });\n  },\n});\n\nexport const { clearAddOrder } = orderSlice.actions;\n\nexport default orderSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAQ,kBAAkB,CAChE,MAAO,CAAAC,KAAK,KAAM,mBAAmB,CAErC,KAAM,CAAAC,YAAY,CAAG,CACnBC,KAAK,CAAE,IAAI,CACXC,QAAQ,CAAE,CACRC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,KAAK,CACZC,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,IACX,CACF,CAAC,CAED,MAAO,MAAM,CAAAJ,QAAQ,CAAGJ,gBAAgB,CACtC,gBAAgB,CAChB,MAAOS,MAAM,CAAAC,IAAA,GAA0B,IAAxB,CAAEC,eAAgB,CAAC,CAAAD,IAAA,CAChC,GAAI,CACF,KAAM,CAAEE,IAAK,CAAC,CAAG,KAAM,CAAAX,KAAK,CAACY,IAAI,CAAC,aAAa,CAAEJ,MAAM,CAAC,CACxD,MAAO,CAAAG,IAAI,CACb,CAAE,MAAOE,GAAG,CAAE,CACZ,MAAO,CAAAH,eAAe,CAACG,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC,CAC3C,CACF,CACF,CAAC,CAED,KAAM,CAAAI,UAAU,CAAGjB,WAAW,CAAC,CAC7BkB,IAAI,CAAE,OAAO,CACbf,YAAY,CACZgB,QAAQ,CAAE,CACRC,aAAa,CAAGC,KAAK,EAAK,CACxBA,KAAK,CAAChB,QAAQ,CAACC,OAAO,CAAG,KAAK,CAC9Be,KAAK,CAAChB,QAAQ,CAACE,KAAK,CAAG,KAAK,CAC5Bc,KAAK,CAAChB,QAAQ,CAACG,OAAO,CAAG,KAAK,CAC9Ba,KAAK,CAAChB,QAAQ,CAACI,OAAO,CAAG,IAAI,CAC/B,CACF,CAAC,CACDa,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CAACC,OAAO,CAACnB,QAAQ,CAACoB,OAAO,CAAGJ,KAAK,EAAK,CAC3CA,KAAK,CAAChB,QAAQ,CAACC,OAAO,CAAG,IAAI,CAC7Be,KAAK,CAAChB,QAAQ,CAACE,KAAK,CAAG,KAAK,CAC5Bc,KAAK,CAAChB,QAAQ,CAACG,OAAO,CAAG,KAAK,CAC9Ba,KAAK,CAAChB,QAAQ,CAACI,OAAO,CAAG,IAAI,CAC/B,CAAC,CAAC,CACFc,OAAO,CAACC,OAAO,CAACnB,QAAQ,CAACqB,SAAS,CAAE,CAACL,KAAK,CAAEM,MAAM,GAAK,CACrDN,KAAK,CAAChB,QAAQ,CAACC,OAAO,CAAG,KAAK,CAC9Be,KAAK,CAAChB,QAAQ,CAACE,KAAK,CAAG,KAAK,CAC5Bc,KAAK,CAAChB,QAAQ,CAACG,OAAO,CAAG,IAAI,CAC7Ba,KAAK,CAAChB,QAAQ,CAACI,OAAO,CAAGkB,MAAM,CAACC,OAAO,CAACnB,OAAO,CACjD,CAAC,CAAC,CACFc,OAAO,CAACC,OAAO,CAACnB,QAAQ,CAACwB,QAAQ,CAAE,CAACR,KAAK,CAAEM,MAAM,GAAK,CACpDN,KAAK,CAAChB,QAAQ,CAACC,OAAO,CAAG,KAAK,CAC9Be,KAAK,CAAChB,QAAQ,CAACE,KAAK,CAAG,IAAI,CAC3Bc,KAAK,CAAChB,QAAQ,CAACG,OAAO,CAAG,KAAK,CAC9Ba,KAAK,CAAChB,QAAQ,CAACI,OAAO,CAAGkB,MAAM,CAACC,OAAO,CAACnB,OAAO,CACjD,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEW,aAAc,CAAC,CAAGH,UAAU,CAACa,OAAO,CAEnD,cAAe,CAAAb,UAAU,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}