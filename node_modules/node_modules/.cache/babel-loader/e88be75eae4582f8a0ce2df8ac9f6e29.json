{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../utils/axios\";\nconst initialState = {\n  order: null,\n  addOrder: {\n    loading: false,\n    error: false,\n    success: false,\n    message: null\n  }\n};\nexport const addOrder = createAsyncThunk(\"order/addOrder\", async (values, {\n  rejectWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/orders/add\", values);\n    return data;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nconst orderSlice = createSlice({\n  name: \"order\",\n  initialState,\n  reducers: {\n    clearAddOrder: state => {\n      state.addOrder.loading = false;\n      state.addOrder.error = false;\n      state.addOrder.success = false;\n      state.addOrder.message = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(addOrder.pending, state => {\n      state.addOrder.loading = true;\n      state.addOrder.error = false;\n      state.addOrder.success = false;\n      state.addOrder.message = null;\n    });\n    builder.addCase(addOrder.fulfilled, (state, action) => {\n      state.addOrder.loading = false;\n      state.addOrder.error = false;\n      state.addOrder.success = true;\n      state.addOrder.message = action.payload.message;\n    });\n    builder.addCase(addOrder.rejected, (state, action) => {\n      state.addOrder.loading = false;\n      state.addOrder.error = true;\n      state.addOrder.success = false;\n      state.addOrder.message = action.payload.message;\n    });\n  }\n});\nexport const {\n  clearAddOrder\n} = orderSlice.actions;\nexport default orderSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","order","addOrder","loading","error","success","message","values","rejectWithValue","data","post","err","response","orderSlice","name","reducers","clearAddOrder","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/home/devuser/SACHIN/client/src/redux/slices/orderSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../utils/axios\";\n\nconst initialState = {\n  order: null,\n  addOrder: {\n    loading: false,\n    error: false,\n    success: false,\n    message: null,\n  },\n};\n\nexport const addOrder = createAsyncThunk(\n  \"order/addOrder\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/orders/add\", values);\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nconst orderSlice = createSlice({\n  name: \"order\",\n  initialState,\n  reducers: {\n    clearAddOrder: (state) => {\n      state.addOrder.loading = false;\n      state.addOrder.error = false;\n      state.addOrder.success = false;\n      state.addOrder.message = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(addOrder.pending, (state) => {\n      state.addOrder.loading = true;\n      state.addOrder.error = false;\n      state.addOrder.success = false;\n      state.addOrder.message = null;\n    });\n    builder.addCase(addOrder.fulfilled, (state, action) => {\n      state.addOrder.loading = false;\n      state.addOrder.error = false;\n      state.addOrder.success = true;\n      state.addOrder.message = action.payload.message;\n    });\n    builder.addCase(addOrder.rejected, (state, action) => {\n      state.addOrder.loading = false;\n      state.addOrder.error = true;\n      state.addOrder.success = false;\n      state.addOrder.message = action.payload.message;\n    });\n  },\n});\n\nexport const { clearAddOrder } = orderSlice.actions;\n\nexport default orderSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,mBAAmB;AAErC,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE;IACRC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAMJ,QAAQ,GAAGJ,gBAAgB,CACtC,gBAAgB,EAChB,OAAOS,MAAM,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACrC,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,aAAa,EAAEH,MAAM,CAAC;IACxD,OAAOE,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,OAAOH,eAAe,CAACG,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC3C;AACF,CACF,CAAC;AAED,MAAMI,UAAU,GAAGhB,WAAW,CAAC;EAC7BiB,IAAI,EAAE,OAAO;EACbd,YAAY;EACZe,QAAQ,EAAE;IACRC,aAAa,EAAGC,KAAK,IAAK;MACxBA,KAAK,CAACf,QAAQ,CAACC,OAAO,GAAG,KAAK;MAC9Bc,KAAK,CAACf,QAAQ,CAACE,KAAK,GAAG,KAAK;MAC5Ba,KAAK,CAACf,QAAQ,CAACG,OAAO,GAAG,KAAK;MAC9BY,KAAK,CAACf,QAAQ,CAACI,OAAO,GAAG,IAAI;IAC/B;EACF,CAAC;EACDY,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAAClB,QAAQ,CAACmB,OAAO,EAAGJ,KAAK,IAAK;MAC3CA,KAAK,CAACf,QAAQ,CAACC,OAAO,GAAG,IAAI;MAC7Bc,KAAK,CAACf,QAAQ,CAACE,KAAK,GAAG,KAAK;MAC5Ba,KAAK,CAACf,QAAQ,CAACG,OAAO,GAAG,KAAK;MAC9BY,KAAK,CAACf,QAAQ,CAACI,OAAO,GAAG,IAAI;IAC/B,CAAC,CAAC;IACFa,OAAO,CAACC,OAAO,CAAClB,QAAQ,CAACoB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACrDN,KAAK,CAACf,QAAQ,CAACC,OAAO,GAAG,KAAK;MAC9Bc,KAAK,CAACf,QAAQ,CAACE,KAAK,GAAG,KAAK;MAC5Ba,KAAK,CAACf,QAAQ,CAACG,OAAO,GAAG,IAAI;MAC7BY,KAAK,CAACf,QAAQ,CAACI,OAAO,GAAGiB,MAAM,CAACC,OAAO,CAAClB,OAAO;IACjD,CAAC,CAAC;IACFa,OAAO,CAACC,OAAO,CAAClB,QAAQ,CAACuB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MACpDN,KAAK,CAACf,QAAQ,CAACC,OAAO,GAAG,KAAK;MAC9Bc,KAAK,CAACf,QAAQ,CAACE,KAAK,GAAG,IAAI;MAC3Ba,KAAK,CAACf,QAAQ,CAACG,OAAO,GAAG,KAAK;MAC9BY,KAAK,CAACf,QAAQ,CAACI,OAAO,GAAGiB,MAAM,CAACC,OAAO,CAAClB,OAAO;IACjD,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEU;AAAc,CAAC,GAAGH,UAAU,CAACa,OAAO;AAEnD,eAAeb,UAAU,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}