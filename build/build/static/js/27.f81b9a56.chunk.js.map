{"version":3,"sources":["components/Profile/ProfileNavbar.js","components/Profile/ProfileHeader.js","components/Profile/ProfileAppShell.js","pages/Profile.js"],"names":["useStyles","createStyles","theme","navbarItem","fn","focusStyles","display","alignItems","textDecoration","fontSize","color","colorScheme","colors","dark","gray","padding","concat","spacing","xs","sm","borderRadius","radius","fontWeight","backgroundColor","white","black","navbarItemIcon","marginRight","ProfileNavbar","_ref","opened","onClosing","classes","scroll","scrollTo","useWindowScroll","React","createElement","Navbar","p","sx","height","largerThan","top","y","smallerThan","hiddenBreakpoint","hidden","width","lg","Section","Link","to","className","onClick","HiOutlineUserCircle","size","Text","TfiShoppingCartFull","BsGeoAlt","ProfileHeader","useMantineTheme","setScroll","MediaQuery","styles","Header","base","md","style","Burger","mr","fontFamily","ProfileAppShell","user","setOpened","useState","AppShell","main","background","navbarOffsetBreakpoint","navbar","header","Outlet","context","Profile","_Object$entries","_user$_id","_Object$entries2","updateUser","useSelector","state","auth","segment","window","location","href","toString","split","useMemo","document","title","success","showNotification","autoClose","message","icon","IoCheckmarkOutline","description","boxShadow","error","IoCloseOutline","Fragment","Object","entries","length","_id","Navigate","Container"],"mappings":"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","file":"static/js/27.f81b9a56.chunk.js","sourcesContent":["import { Navbar, Text, createStyles } from \"@mantine/core\";\nimport { useWindowScroll } from \"@mantine/hooks\";\nimport { Link } from \"react-router-dom\";\nimport { HiOutlineUserCircle } from \"react-icons/hi\";\nimport { TfiShoppingCartFull } from \"react-icons/tfi\";\nimport { BsGeoAlt } from \"react-icons/bs\";\nimport React from \"react\";\n\nconst useStyles = createStyles((theme) => ({\n  navbarItem: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: 14,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    padding: `${theme.spacing.xs}px ${theme.spacing.sm}px`,\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\"\n          ? theme.colors.dark[6]\n          : theme.colors.gray[0],\n      color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      [`& [class*=\"icon\"]`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n    },\n  },\n  navbarItemIcon: {\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n}));\n\nconst ProfileNavbar = ({ opened, onClosing }) => {\n  const { classes } = useStyles();\n  // eslint-disable-next-line no-unused-vars\n  const [scroll, scrollTo] = useWindowScroll();\n  return (\n    <Navbar\n      p=\"md\"\n      sx={(theme) => ({\n        height: \"100%\",\n        [theme.fn.largerThan(\"sm\")]: {\n          top: scroll.y > 60 ? 0 : 60 - scroll.y,\n        },\n        [theme.fn.smallerThan(\"sm\")]: {\n          top: scroll.y > 60 ? 40 : 100 - scroll.y,\n        },\n      })}\n      hiddenBreakpoint=\"sm\"\n      hidden={!opened}\n      width={{ sm: 200, lg: 300 }}\n    >\n      <Navbar.Section>\n        <Link\n          to=\"info\"\n          className={classes.navbarItem}\n          onClick={() => onClosing()}\n        >\n          <HiOutlineUserCircle\n            className={`${classes.navbarItemIcon} icon`}\n            size={20}\n          />\n          <Text>User Info</Text>\n        </Link>\n        <Link\n          to=\"orders\"\n          className={classes.navbarItem}\n          onClick={() => onClosing()}\n        >\n          <TfiShoppingCartFull\n            className={`${classes.navbarItemIcon} icon`}\n            size={20}\n          />\n          <Text>My Orders</Text>\n        </Link>\n        <Link\n          to=\"addresses\"\n          className={classes.navbarItem}\n          onClick={() => onClosing()}\n        >\n          <BsGeoAlt className={`${classes.navbarItemIcon} icon`} size={20} />\n          <Text>Shipping Addresses</Text>\n        </Link>\n      </Navbar.Section>\n    </Navbar>\n  );\n};\n\nexport default ProfileNavbar;\n","import {\n  MediaQuery,\n  Header,\n  Burger,\n  Text,\n  useMantineTheme,\n} from \"@mantine/core\";\nimport { useWindowScroll } from \"@mantine/hooks\";\nimport React from \"react\";\n\nconst ProfileHeader = ({ opened, onClosing }) => {\n  const theme = useMantineTheme();\n  // eslint-disable-next-line no-unused-vars\n  const [scroll, setScroll] = useWindowScroll();\n  return (\n    <MediaQuery largerThan=\"sm\" styles={{ display: \"none\" }}>\n      <Header\n        sx={(theme) => ({\n          [theme.fn.smallerThan(\"md\")]: {\n            top: scroll.y > 60 ? 0 : 60 - scroll.y,\n          },\n        })}\n        height={{ base: 50, md: 70 }}\n        p=\"md\"\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            height: \"100%\",\n          }}\n        >\n          <MediaQuery largerThan=\"sm\" styles={{ display: \"none\" }}>\n            <Burger\n              opened={opened}\n              onClick={() => onClosing()}\n              size=\"sm\"\n              color={theme.colors.gray[6]}\n              mr=\"xl\"\n            />\n          </MediaQuery>\n\n          <Text\n            sx={(theme) => ({\n              fontFamily: theme.fontFamily,\n            })}\n          >\n            User Profile\n          </Text>\n        </div>\n      </Header>\n    </MediaQuery>\n  );\n};\n\nexport default ProfileHeader;\n","import { AppShell } from \"@mantine/core\";\nimport { Outlet } from \"react-router-dom\";\nimport ProfileNavbar from \"./ProfileNavbar\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport { useState } from \"react\";\nimport React from \"react\";\n\nconst ProfileAppShell = ({ user }) => {\n  // eslint-disable-next-line no-unused-vars\n  const [opened, setOpened] = useState(false);\n  return (\n    <AppShell\n      sx={(theme) => ({\n        main: {\n          background: theme.colorScheme === \"dark\" ? \"#0e1012\" : \"#e9e9ec\",\n        },\n        [theme.fn.smallerThan(\"md\")]: {\n          main: {\n            width: \"100%\",\n            padding: \"16px 5px\",\n          },\n        },\n      })}\n      navbarOffsetBreakpoint=\"sm\"\n      navbar={\n        <ProfileNavbar onClosing={() => setOpened(!opened)} opened={opened} />\n      }\n      header={\n        <ProfileHeader onClosing={() => setOpened(!opened)} opened={opened} />\n      }\n    >\n      <Outlet context={user} />\n    </AppShell>\n  );\n};\n\nexport default ProfileAppShell;\n","import { Container } from \"@mantine/core\";\nimport { useSelector } from \"react-redux\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IoCheckmarkOutline, IoCloseOutline } from \"react-icons/io5\";\nimport ProfileAppShell from \"../components/Profile/ProfileAppShell\";\nimport { useMemo } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport React from \"react\";\n\nconst Profile = () => {\n  const { user, updateUser } = useSelector((state) => state.auth);\n  const segment = window.location.href.toString().split(\"/\")[4];\n  useMemo(() => {\n    document.title = \"Profile | Pizza Fleet\";\n    return () => {\n      document.title = \"Pizza Fleet\";\n    };\n  }, []);\n\n  if (updateUser.success) {\n    showNotification({\n      autoClose: 3000,\n      title: \"Success\",\n      message: updateUser.message,\n      icon: <IoCheckmarkOutline size={20} />,\n      color: \"green\",\n      styles: (theme) => ({\n        title: {\n          color:\n            theme.colorScheme === \"dark\" ? theme.colors.white : theme.black,\n          fontWeight: 500,\n          fontSize: 16,\n        },\n        description: {\n          color: theme.colors.gray[6],\n          fontSize: 15,\n        },\n        boxShadow: \"0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)\",\n      }),\n    });\n  }\n\n  if (updateUser.error) {\n    showNotification({\n      autoClose: 3000,\n      title: \"Error\",\n      message: updateUser.message,\n      icon: <IoCloseOutline size={20} />,\n      color: \"red\",\n      styles: (theme) => ({\n        title: {\n          color:\n            theme.colorScheme === \"dark\" ? theme.colors.white : theme.black,\n          fontWeight: 500,\n          fontSize: 16,\n        },\n        description: {\n          color: theme.colors.gray[6],\n          fontSize: 15,\n        },\n        boxShadow: \"0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)\",\n      }),\n    });\n  }\n  return (\n    <>\n      {user &&\n        Object?.entries(user)?.length > 0 &&\n        segment !== user?._id?.toString() && (\n          <Navigate to={`/profile/${user?._id}`} />\n        )}\n      <Container size=\"lg\">\n        {user && Object?.entries(user)?.length > 0 && (\n          <ProfileAppShell user={user} />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}